@model Banking.Web.ViewModel.TransferMoneyViewModel
@{
    ViewBag.Title = "TransferMoney";
}

<h2>Transfer Money</h2>
@if (ViewBag.TransactionInfo == null)
{
    using (Html.BeginForm("TransferMoney", "Transaction", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Enter the following details to transfer money.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
           
            @Html.Label("UserName :", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.fromBankAccountViewModel.UserName, new { @class = "form-control", @readonly = true })
                @*@Html.ValidationMessageFor(m => m.toBankAccountViewModel.UserName, "Username field is required.")*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Deposit From :", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.fromBankAccountViewModel.AccountNumber, new { @class = "form-control", @readonly = true })
                @*@Html.ValidationMessageFor(m => m.fromBankAccountViewModel.AccountNumber, "Deposit  field is required.")*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Deposit To :", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.toBankAccountViewModel.AccountNumber, new { @class = "form-control" })
                @*@Html.ValidationMessageFor(m => m.toBankAccountViewModel.AccountNumber, "Deposit To field is required.")*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Amount :", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.transactionViewModel.Amount, new { @class = "form-control" })
                @*@Html.ValidationMessageFor(m => m.transactionViewModel.Amount, "Amount field is required.")*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirm" class="btn btn-default" />
            </div>
        </div>
    }
}
else if (ViewBag.TransactionInfo.TransferStatus == "Success")
{
    <h4>Transferred successfully!!</h4>
    <hr />
    <p><b>$@ViewBag.TransactionInfo.transactionViewModel.Amount</b> is successfully transferred from your account (<b>A/c: @ViewBag.TransactionInfo.fromBankAccountViewModel.AccountNumber</b>) to (<b>A/c: @ViewBag.TransactionInfo.toBankAccountViewModel.AccountNumber</b>)</p>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <input type="button" value="Back" onclick="window.location.href='@Url.Action("TransferMoney", "Transaction" )';" class="btn btn-default" />

        </div>
    </div>
}
else
{
    <h4>Failed!</h4>
    <hr />
    <p>@ViewBag.TransactionInfo.TransferStatus</p>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <input type="button" value="Back" onclick="window.location.href='@Url.Action("TransferMoney", "Transaction" )';" class="btn btn-default" />

        </div>
    </div>
}
